apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: $namespace
  name:	$podName
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hyperledger
        role: peer
        peer-id: $peerID
        org: $namespace
    spec:
      restartPolicy: Always
      volumes:
        - name: peerconfigs
          persistentVolumeClaim:
            claimName: $pvName
        - name: docker-sock
          hostPath:
            path: /var/run
      containers:
        - name: couchdb
          image: hyperledger/fabric-couchdb:x86_64-1.0.3
          ports:
            - containerPort: 5984
        - name: $podName-container
          image: hyperledger/fabric-peer:x86_64-1.0.3
          env:
            - name: CORE_LEDGER_STATE_STATEDATABASE
              value: "CouchDB"
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
              value: "localhost:5984"
            - name: CORE_PEER_ADDRESSAUTODETECT
              value: "true"
            - name: CORE_PEER_NETWORKID
              value: nid1
            - name: CORE_VM_DOCKER_ATTACHSTDOUT
              value: "true"
            - name: CORE_VM_ENDPOINT
              value: "unix:///host/var/run/docker.sock"
            - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
              value: "bridge"
            - name: CORE_LOGGING_LEVEL
              value: "DEBUG"
            - name: CORE_PEER_TLS_ENABLED
              value: "false"
            - name: CORE_PEER_GOSSIP_USELEADERELECTION
              value: "true"
            - name: CORE_PEER_GOSSIP_ORGLEADER
              value: "false"
            - name: CORE_PEER_PROFILE_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/etc/hyperledger/fabric/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/etc/hyperledger/fabric/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/fabric/tls/ca.crt"
            - name: CORE_PEER_ID
              value: $corePeerID
            - name: CORE_PEER_ADDRESS
              value: $peerAddress
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: $peerGossip
            - name: CORE_PEER_LOCALMSPID
              value: $localMSPID
            $gossipBoostrapName
            $gossipBoostrapValue
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 7053
          command: ["peer"]
          args: ["node","start"]
          volumeMounts:
            - mountPath: /etc/hyperledger/fabric/msp
              name: peerconfigs
              subPath: $mspPath
            - mountPath: /etc/hyperledger/fabric/tls
              name: peerconfigs
              subPath: $tlsPath
            - mountPath: /host/var/run
              name: docker-sock
---
apiVersion: v1
kind: Service
metadata:
  namespace: $namespace
  name: $peerID
spec:
  selector:
    app: hyperledger
    role: peer
    peer-id: $peerID
    org: $namespace
  type: NodePort
  ports:
    - name: externale-listen-endpoint
      port: 7051
      targetPort: 7051
      nodePort: $nodePort1
    - name: chaincode-listen-c
      port: 7052
      targetPort: 7052
      nodePort: $nodePort2
    - name: chaincode-listen-e
      port: 7053
      targetPort: 7053
      nodePort: $nodePort3
